/* tslint:disable */
/* eslint-disable */
/**
 * Book Shop Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Book
 */
export interface Book {
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    number?: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    year?: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    text?: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    fName?: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    price?: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    color?: string;
}

export function BookFromJSON(json: any): Book {
    return BookFromJSONTyped(json, false);
}

export function BookFromJSONTyped(json: any, ignoreDiscriminator: boolean): Book {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'year': !exists(json, 'year') ? undefined : json['year'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'fName': !exists(json, 'fName') ? undefined : json['fName'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'color': !exists(json, 'color') ? undefined : json['color'],
    };
}

export function BookToJSON(value?: Book | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'number': value.number,
        'year': value.year,
        'text': value.text,
        'fName': value.fName,
        'price': value.price,
        'color': value.color,
    };
}


